{"version":3,"sources":["components/logo.js","components/searchAppBar.js","components/postCard.js","components/postCardContainer.js","actions/index.js","components/app.js","serviceWorker.js","reducers/postsReducer.js","reducers/index.js","store.js","index.js","logo.svg"],"names":["withStyles","logo","color","avatar","height","width","margin","props","classes","react_default","a","createElement","className","Avatar_default","alt","src","logoSvg","SearchAppBar","state","anchorEl","mobileMoreAnchorEl","handleProfileMenuOpen","event","_this","setState","currentTarget","handleMenuClose","handleMobileMenuClose","handleMobileMenuOpen","_this$state","this","isMenuOpen","Boolean","isMobileMenuOpen","renderMenu","Menu_default","anchorOrigin","vertical","horizontal","transformOrigin","open","onClose","MenuItem_default","onClick","renderMobileMenu","IconButton_default","Badge_default","badgeContent","Notifications_default","AccountCircle_default","root","AppBar_default","appbar","position","Toolbar_default","components_logo","search","searchIcon","Search_default","InputBase_default","placeholder","inputRoot","input","inputInput","grow","sectionDesktop","aria-owns","undefined","aria-haspopup","sectionMobile","MoreVert_default","React","Component","theme","_title","backgroundColor","boxShadow","flexGrow","menuButton","marginLeft","marginRight","title","display","Object","defineProperty","breakpoints","up","float","borderRadius","shape","&:hover","fade","palette","common","white","spacing","unit","pointerEvents","alignItems","justifyContent","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","card","minWidth","bullet","transform","fontSize","fontFamily","pos","marginBottom","customFont","actionBlue","Card_default","CardContent_default","Typography_default","gutterBottom","variant","component","post","body","CardActions_default","Button_default","size","connect","posts","postsReducer","dispatch","fetchPosts","axios","get","then","response","type","payload","data","toBeCachedData","sort","Math","random","splice","localStorage","setItem","JSON","stringify","catch","err","console","error","updatePosts","useEffect","navigator","onLine","cachedPosts","parse","getItem","log","length","Grid_default","container","map","index","key","item","xs","sm","postCard","App","searchAppBar","postCardContainer","isLocalhost","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","initState","combineReducers","arguments","action","objectSpread","store","createStore","rootReducer","applyMiddleware","logger","thunk","ReactDOM","render","es","app","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.21102178.chunk.js","sourcesContent":["import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Avatar from '@material-ui/core/Avatar'\nimport logoSvg from '../logo.svg'\n\nconst styles = {\n    logo: {\n        color: 'red'\n    },\n    avatar: {\n        height: 40,\n        width: 40,\n        margin: 10\n    }\n}\n\nconst Logo = (props) => {\n    const { classes } = props\n    return (\n        <div className={classes.logo}>\n            <Avatar alt='Logo' src={logoSvg} className={classes.avatar} />\n        </div>\n    )\n}\n\nexport default withStyles(styles)(Logo)","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBase from '@material-ui/core/InputBase';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport { withStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport Logo from './logo'\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n  },\n  appbar: {\n    backgroundColor: '#fff',\n    boxShadow: '0 15px 40px -20px rgba(40,44,63,.15)',\n    color: '#333'\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n    fontFamily: 'Google Sans'\n  },\n  search: {\n    position: 'relative',\n    float: 'right',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: '#efefef',\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing.unit * 2,\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit * 3,\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%',\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: 200,\n    },\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n});\n\nclass SearchAppBar extends React.Component {\n  state = {\n    anchorEl: null,\n    mobileMoreAnchorEl: null,\n  };\n\n  handleProfileMenuOpen = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleMenuClose = () => {\n    this.setState({ anchorEl: null });\n    this.handleMobileMenuClose();\n  };\n\n  handleMobileMenuOpen = event => {\n    this.setState({ mobileMoreAnchorEl: event.currentTarget });\n  };\n\n  handleMobileMenuClose = () => {\n    this.setState({ mobileMoreAnchorEl: null });\n  };\n\n  render() {\n    const { anchorEl, mobileMoreAnchorEl } = this.state;\n    const { classes } = this.props;\n    const isMenuOpen = Boolean(anchorEl);\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n    const renderMenu = (\n      <Menu\n        anchorEl={anchorEl}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n        open={isMenuOpen}\n        onClose={this.handleMenuClose}\n      >\n        <MenuItem onClick={this.handleMenuClose}>Profile</MenuItem>\n        <MenuItem onClick={this.handleMenuClose}>My account</MenuItem>\n      </Menu>\n    );\n\n    const renderMobileMenu = (\n      <Menu\n        anchorEl={mobileMoreAnchorEl}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n        open={isMobileMenuOpen}\n        onClose={this.handleMenuClose}\n      >\n        {/* <MenuItem onClick={this.handleMobileMenuClose}>\n          <IconButton color=\"inherit\">\n            <Badge badgeContent={4} color=\"secondary\">\n              <MailIcon />\n            </Badge>\n          </IconButton>\n          <p>Messages</p>\n        </MenuItem> */}\n        <MenuItem onClick={this.handleMobileMenuClose}>\n          <IconButton color=\"inherit\">\n            <Badge badgeContent={11} color=\"secondary\">\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n          <p>Notifications</p>\n        </MenuItem>\n        <MenuItem onClick={this.handleProfileMenuOpen}>\n          <IconButton color=\"inherit\">\n            <AccountCircle />\n          </IconButton>\n          <p>Profile</p>\n        </MenuItem>\n      </Menu>\n    );\n\n    return (\n      <div className={classes.root}>\n        <AppBar className={classes.appbar} position=\"static\">\n          <Toolbar>\n            {/* <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Open drawer\">\n              <MenuIcon />\n            </IconButton> */}\n            <Logo />\n            <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                <SearchIcon />\n              </div>\n              <InputBase\n                placeholder=\"Search…\"\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput,\n                }}\n              />\n            </div>\n            <div className={classes.grow} />\n            <div className={classes.sectionDesktop}>\n              {/* <IconButton color=\"inherit\">\n                <Badge badgeContent={4} color=\"secondary\">\n                  <MailIcon />\n                </Badge>\n              </IconButton> */}\n              <IconButton color=\"inherit\">\n                <Badge badgeContent={17} color=\"secondary\">\n                  <NotificationsIcon />\n                </Badge>\n              </IconButton>\n              <IconButton\n                aria-owns={isMenuOpen ? 'material-appbar' : undefined}\n                aria-haspopup=\"true\"\n                onClick={this.handleProfileMenuOpen}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n            </div>\n            <div className={classes.sectionMobile}>\n              <IconButton aria-haspopup=\"true\" onClick={this.handleMobileMenuOpen} color=\"inherit\">\n                <MoreIcon />\n              </IconButton>\n            </div>\n          </Toolbar>\n        </AppBar>\n        {renderMenu}\n        {renderMobileMenu}\n      </div>\n    );\n  }\n}\n\nSearchAppBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SearchAppBar);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = {\n  card: {\n    minWidth: 275,\n    boxShadow: '0 5px 40px -20px rgba(40,44,63,.15)'\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 10,\n    fontFamily: 'Google Sans'\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  customFont: {\n      fontFamily: 'Google Sans'\n  },\n  actionBlue: {\n      color: '#4285f5',\n      fontFamily: 'Google Sans'\n  }\n};\n\nfunction PostCard(props) {\n  const { classes } = props;\n\n  return (\n    <Card className={classes.card}>\n      <CardContent>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n          Quote of the Day\n        </Typography>\n        <Typography className={classes.customFont} variant=\"h5\" component=\"h4\">\n            { props.post.title }\n        </Typography>\n        <Typography className={classes.customFont} component=\"p\">\n            { props.post.body }\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button className={classes.actionBlue} size=\"small\">Learn More</Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nexport default withStyles(styles)(PostCard);\n","import React, { useEffect } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport PostCard from './postCard'\nimport { connect } from 'react-redux'\nimport { fetchPosts } from '../actions/index'\n\nconst styles = {\n    root: {\n        flexGrow: 1,\n        margin: 20\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        posts: state.postsReducer.posts\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return  {\n        fetchPosts: () => { dispatch(fetchPosts()) },\n        updatePosts: (payload) => {dispatch({ type: 'UPDATE_POSTS', payload })}\n    }\n}\n\nconst PostCardContainer = (props) => {\n    let { classes, posts } = props\n\n    useEffect(() => {\n        if(navigator.onLine){\n            props.fetchPosts()\n        } else {\n            let cachedPosts = JSON.parse(localStorage.getItem('posts')) || []\n            console.log(cachedPosts)\n            props.updatePosts(cachedPosts)\n        }\n    }, [])\n\n    console.log('posts', posts)\n    if(!posts.length) return <div>Loading...</div>\n\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={16}>\n                {props.posts.map((post, index) => {\n                    return (\n                        <Grid key={index} item xs={12} sm={3}>\n                            <PostCard post={post} />\n                        </Grid>\n                    )\n                })}\n            </Grid>\n        </div>\n    )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(PostCardContainer))","import axios from 'axios'\n\nexport const fetchPosts = () => (dispatch) => {\n    axios.get('https://jsonplaceholder.typicode.com/posts').then((response) => {\n        dispatch({ type: 'UPDATE_POSTS', payload: response.data })\n        let toBeCachedData = response.data.sort(function() {return 0.5 - Math.random()}).splice(5, 10)\n        localStorage.setItem('posts', JSON.stringify(toBeCachedData))\n    }).catch((err) => {\n        console.error(err)\n    })\n}","import React, { Component } from 'react';\nimport SearchAppBar from './searchAppBar'\nimport PostCardContainer from './postCardContainer'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <SearchAppBar />\n        <PostCardContainer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    posts: []\n}\n\nexport default function(state = initState, action){\n    const { type, payload } = action\n    switch(type){\n        case 'UPDATE_POSTS': return { ...state, posts: payload }\n        default: return state\n    }\n}","import { combineReducers } from 'redux'\nimport postsReducer from './postsReducer'\n\nexport default combineReducers({\n    postsReducer\n})","import { createStore, applyMiddleware } from 'redux'\nimport logger from 'redux-logger'\nimport thunk from 'redux-thunk'\nimport rootReducer from './reducers/index'\n\nconst store = createStore(rootReducer, applyMiddleware(\n    logger,\n    thunk\n))\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport * as serviceWorker from './serviceWorker';\nimport './styles/index.css'\nimport store from './store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n<Provider store={store}>\n    <App />\n</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/logo.3352ed35.svg\";"],"sourceRoot":""}