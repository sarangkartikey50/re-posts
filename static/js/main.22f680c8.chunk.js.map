{"version":3,"sources":["resources/images/logo.svg","components/logo.js","components/searchAppBar.js","components/postCard.js","db.js","components/postCardContainer.js","actions/index.js","components/app.js","pushNotifications/firebaseConfig.js","serviceWorker.js","reducers/postsReducer.js","reducers/index.js","store.js","index.js"],"names":["module","exports","__webpack_require__","p","withStyles","theme","avatar","height","width","margin","background","palette","iconColor","props","classes","react_default","a","createElement","className","logo","Avatar_default","alt","src","logoSvg","SearchAppBar","state","anchorEl","mobileMoreAnchorEl","themeCheckBox","handleChange","name","event","_this","setState","Object","defineProperty","target","checked","toggleTheme","handleProfileMenuOpen","currentTarget","handleMenuClose","handleMobileMenuClose","handleMobileMenuOpen","_this$state","this","isMenuOpen","Boolean","isMobileMenuOpen","renderMenu","Menu_default","anchorOrigin","vertical","horizontal","transformOrigin","open","onClose","MenuItem_default","onClick","renderMobileMenu","index_es","onChange","value","root","AppBar_default","appbar","position","Toolbar_default","components_logo","grow","sectionDesktop","sectionMobile","IconButton_default","aria-haspopup","color","MoreVert_default","React","Component","connect","posts","postsReducer","dispatch","payload","type","_title","backgroundColor","boxShadow","text","flexGrow","menuButton","marginLeft","marginRight","title","display","breakpoints","up","search","float","borderRadius","shape","accentBackground","&:hover","fade","common","white","spacing","unit","searchIcon","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","card","minWidth","bullet","transform","fontSize","fontFamily","pos","marginBottom","customFont","actionBlue","primaryColor","Card_default","CardContent_default","Typography_default","gutterBottom","variant","component","post","body","CardActions_default","Button_default","size","db","Dexie","version","stores","fetchPosts","axios","get","then","_ref","asyncToGenerator","regenerator_default","mark","_callee","response","toBeCachedData","wrap","_context","prev","next","data","sort","Math","random","splice","forEach","id","toCollection","delete","bulkPut","stop","_x","apply","arguments","catch","err","console","error","updateCachedPosts","_ref2","_callee2","_context2","toArray","sent","_x2","padding","progress","marginTop","progressContainer","useEffect","navigator","onLine","length","Grid_default","container","map","index","key","item","xs","sm","postCard","CircularProgress_default","lightTheme","createMuiTheme","main","grey","blue","darkTheme","red","App","core_styles","isDark","searchAppBar","postCardContainer","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firebase","initializeApp","messaging","isLocalhost","window","location","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","initState","combineReducers","undefined","action","objectSpread","store","createStore","rootReducer","applyMiddleware","logger","thunk","ReactDOM","render","es","app","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker","requestPermission","getToken","token","code","setBackgroundMessageHandler","notification","icon","options","showNotification"],"mappings":"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","file":"static/js/main.22f680c8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.8ac83418.svg\";","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Avatar from '@material-ui/core/Avatar'\nimport logoSvg from '../resources/images/logo.svg'\n\nconst styles = (theme) => ({\n    avatar: {\n        height: 40,\n        width: 40,\n        margin: 10,\n        background: theme.palette.iconColor\n    }\n})\n\nconst Logo = (props) => {\n    const { classes } = props\n    return (\n        <div className={classes.logo}>\n            <Avatar alt='Logo' src={logoSvg} className={classes.avatar} />\n        </div>\n    )\n}\n\nexport default withStyles(styles)(Logo)","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBase from '@material-ui/core/InputBase';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport { withStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport Logo from './logo'\nimport { connect } from 'react-redux'\nimport { Switch } from '@material-ui/core'\n\nconst mapStateToProps = (state) => {\n  return {\n    posts: state.postsReducer.posts\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    toggleTheme: (payload) => dispatch({ type: 'UPDATE_THEME', payload })\n  }\n}\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n  },\n  appbar: {\n    backgroundColor: theme.palette.background,\n    boxShadow: theme.boxShadow,\n    color: theme.palette.text\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n    fontFamily: 'Google Sans'\n  },\n  search: {\n    position: 'relative',\n    float: 'right',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: theme.palette.accentBackground,\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing.unit * 2,\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit * 3,\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%',\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: 200,\n    },\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n});\n\nclass SearchAppBar extends React.Component {\n  state = {\n    anchorEl: null,\n    mobileMoreAnchorEl: null,\n    themeCheckBox: false\n  };\n\n  handleChange = name => event => {\n    this.setState({ [name]: event.target.checked });\n    this.props.toggleTheme(event.target.checked)\n  }\n\n  handleProfileMenuOpen = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleMenuClose = () => {\n    this.setState({ anchorEl: null });\n    this.handleMobileMenuClose();\n  };\n\n  handleMobileMenuOpen = event => {\n    this.setState({ mobileMoreAnchorEl: event.currentTarget });\n  };\n\n  handleMobileMenuClose = () => {\n    this.setState({ mobileMoreAnchorEl: null });\n  };\n\n  render() {\n    const { anchorEl, mobileMoreAnchorEl } = this.state;\n    const { classes } = this.props;\n    const isMenuOpen = Boolean(anchorEl);\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n    const renderMenu = (\n      <Menu\n        anchorEl={anchorEl}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n        open={isMenuOpen}\n        onClose={this.handleMenuClose}\n      >\n        <MenuItem onClick={this.handleMenuClose}>Profile</MenuItem>\n        <MenuItem onClick={this.handleMenuClose}>My account</MenuItem>\n      </Menu>\n    );\n\n    const renderMobileMenu = (\n      <Menu\n        anchorEl={mobileMoreAnchorEl}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n        open={isMobileMenuOpen}\n        onClose={this.handleMenuClose}\n      >\n        <MenuItem>\n          <Switch\n            checked={this.state.themeCheckBox}\n            onChange={this.handleChange('themeCheckBox')}\n            value=\"themeCheckBox\"\n          />\n        </MenuItem>\n      </Menu>\n    );\n\n    return (\n      <div className={classes.root}>\n        <AppBar className={classes.appbar} position=\"static\">\n          <Toolbar>\n            <Logo />\n            <div className={classes.grow} />\n            <div className={classes.sectionDesktop}>\n              <Switch\n                checked={this.state.themeCheckBox}\n                onChange={this.handleChange('themeCheckBox')}\n                value=\"themeCheckBox\"\n              />\n            </div>\n            <div className={classes.sectionMobile}>\n              <IconButton aria-haspopup=\"true\" onClick={this.handleMobileMenuOpen} color=\"inherit\">\n                <MoreIcon />\n              </IconButton>\n            </div>\n          </Toolbar>\n        </AppBar>\n        {renderMenu}\n        {renderMobileMenu}\n      </div>\n    );\n  }\n}\n\nSearchAppBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(SearchAppBar))\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n  card: {\n    minWidth: 275,\n    boxShadow: theme.boxShadow,\n    background: theme.palette.background\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 10,\n    fontFamily: 'Google Sans',\n    color: theme.palette.text\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  customFont: {\n      fontFamily: 'Google Sans',\n      color: theme.palette.text\n  },\n  actionBlue: {\n      color: theme.palette.primaryColor,\n      fontFamily: 'Google Sans'\n  }\n})\n\nfunction PostCard(props) {\n  const { classes } = props;\n\n  return (\n    <Card className={classes.card}>\n      <CardContent>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n          Quote of the Day\n        </Typography>\n        <Typography className={classes.customFont} variant=\"h5\" component=\"h4\">\n            { props.post.title }\n        </Typography>\n        <Typography className={classes.customFont} component=\"p\">\n            { props.post.body }\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button className={classes.actionBlue} size=\"small\">Learn More</Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nexport default withStyles(styles)(PostCard);\n","import Dexie from 'dexie';\n\nconst db = new Dexie('PostsDB');\ndb.version(1).stores({ posts: '++id, title, body' });\n\nexport default db;","import React, { useEffect } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport PostCard from './postCard'\nimport { connect } from 'react-redux'\nimport { fetchPosts, updateCachedPosts } from '../actions/index'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { fade } from '@material-ui/core/styles/colorManipulator'\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        padding: 20,\n        background: (theme.palette.background)\n    },\n    progress: {\n        display: 'block',\n        margin: '0 auto',\n        marginTop: '30%',\n        color: '#ea4436'\n    },\n    progressContainer: {\n        width: '100%'\n    }\n})\n\nconst mapStateToProps = (state) => {\n    return {\n        posts: state.postsReducer.posts\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return  {\n        fetchPosts: () => { dispatch(fetchPosts()) },\n        updateCachedPosts: () => { dispatch(updateCachedPosts())}\n    }\n}\n\nconst PostCardContainer = (props) => {\n    let { classes, posts } = props\n\n    useEffect(() => {\n        if(navigator.onLine){\n            props.fetchPosts()\n        } else {\n            props.updateCachedPosts()\n        }\n    }, [])\n\n    if(!posts.length) return <div className={classes.progressContainer}><CircularProgress className={classes.progress} /></div>\n\n    return (\n        <div>\n            <div className={classes.root}>\n                <Grid container spacing={16}>\n                    {props.posts.map((post, index) => {\n                        return (\n                            <Grid key={index} item xs={12} sm={3}>\n                                <PostCard post={post} />\n                            </Grid>\n                        )\n                    })}\n                </Grid>\n            </div>\n        </div>\n    )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(PostCardContainer))","import axios from 'axios'\nimport db from '../db'\n\nexport const fetchPosts = () => (dispatch) => {\n    axios.get('https://jsonplaceholder.typicode.com/posts').then( async (response) => {\n        dispatch({ type: 'UPDATE_POSTS', payload: response.data.sort(() => (0.5 - Math.random())) })\n        let toBeCachedData = response.data.sort(function() {return 0.5 - Math.random()}).splice(5, 10)\n        toBeCachedData.forEach(post => {\n            delete post.id\n        })\n        await db.posts.toCollection().delete()\n        db.posts.bulkPut(toBeCachedData)\n    }).catch((err) => {\n        console.error(err)\n    })\n}\n\nexport const updateCachedPosts = () => async (dispatch) => {\n    let posts = await db.posts.toArray()\n    dispatch({ type: 'UPDATE_POSTS', payload: posts})\n}","import React, { Component } from 'react';\nimport SearchAppBar from './searchAppBar'\nimport PostCardContainer from './postCardContainer'\nimport { withStyles } from '@material-ui/core/styles'\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core'\nimport { grey, blue, red } from '@material-ui/core/colors'\nimport { connect } from 'react-redux'\n\nconst mapStateToProps = (state) => {\n  return {\n    isDark: state.postsReducer.isDark\n  }\n}\n\nconst lightTheme = createMuiTheme({\n    palette: {\n        main: grey[500],\n        background: '#fff',\n        text: '#333',\n        primaryColor: blue[400],\n        iconColor: '#999',\n        accentBackground: '#efefef'\n    },\n    boxShadow: '0 5px 40px -20px rgba(40,44,63,.15)'\n})\n\nconst darkTheme = createMuiTheme({\n    palette: {\n        main: grey[500],\n        background: '#222',\n        text: '#fff',\n        primaryColor: blue[400],\n        iconColor: red[600],\n        accentBackground: grey[800]\n    },\n    boxShadow: '0 5px 40px -20px #000'\n})\n\n\nclass App extends Component {\n  render() {\n    return (\n      <MuiThemeProvider theme={this.props.isDark ? darkTheme : lightTheme}>\n        <div>\n          <SearchAppBar />\n          <PostCardContainer />\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(App);\n","const config = {\n    apiKey: \"AIzaSyC-e1Tus6EKhK02XgiHw-2AE4flQMIeMI0\",\n    authDomain: \"re-posts-238314.firebaseapp.com\",\n    databaseURL: \"https://re-posts-238314.firebaseio.com\",\n    projectId: \"re-posts-238314\",\n    storageBucket: \"re-posts-238314.appspot.com\",\n    messagingSenderId: \"345175564245\"\n}\n\n export default config","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nimport firebase from 'firebase'\nimport config from './pushNotifications/firebaseConfig'\nfirebase.initializeApp(config)\nconst messaging = firebase.messaging();\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);messaging\n        .requestPermission()\n        .then(() => {\n          console.log(\"Have Permission\");\n          return messaging.getToken();\n        })\n        .then(token => {\n          console.log(\"FCM Token:\", token);\n          //you probably want to send your new found FCM token to the\n          //application server so that they can send any push\n          //notification to you.\n        })\n        .catch(error => {\n          if (error.code === \"messaging/permission-blocked\") {\n            console.log(\"Please Unblock Notification Request Manually\");\n          } else {\n            console.log(\"Error Occurred\", error);\n          }\n        });\n\n        messaging.setBackgroundMessageHandler(payload => {\n          const title = payload.notification.title;\n          console.log('payload', payload.notification.icon);\n          const options = {\n             body: payload.notification.body,\n             icon: payload.notification.icon\n          }\n          return this.registration.showNotification(title, options);\n        })\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n\n// this.addEventListener(\"notificationclick\", function(event) {\n//   const clickedNotification = event.notification;\n//   clickedNotification.close();\n//   const promiseChain = clients\n//       .matchAll({\n//           type: \"window\",\n//           includeUncontrolled: true\n//        })\n//       .then(windowClients => {\n//           let matchingClient = null;\n//           for (let i = 0; i < windowClients.length; i++) {\n//               const windowClient = windowClients[i];\n//               if (windowClient.url === feClickAction) {\n//                   matchingClient = windowClient;\n//                   break;\n//               }\n//           }\n//           if (matchingClient) {\n//               return matchingClient.focus();\n//           } else {\n//               return clients.openWindow(feClickAction);\n//           }\n//       });\n//       event.waitUntil(promiseChain);\n// });","const initState = {\n    posts: [],\n    isDark: false\n}\n\nexport default function(state = initState, action){\n    const { type, payload } = action\n    switch(type){\n        case 'UPDATE_POSTS': return { ...state, posts: payload }\n        case 'UPDATE_THEME': return { ...state, isDark: payload }\n        default: return state\n    }\n}","import { combineReducers } from 'redux'\nimport postsReducer from './postsReducer'\n\nexport default combineReducers({\n    postsReducer\n})","import { createStore, applyMiddleware } from 'redux'\nimport logger from 'redux-logger'\nimport thunk from 'redux-thunk'\nimport rootReducer from './reducers/index'\n\nconst store = createStore(rootReducer, applyMiddleware(\n    logger,\n    thunk\n))\n\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/app'\nimport * as serviceWorker from './serviceWorker'\nimport './styles/index.css'\nimport store from './store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n<Provider store={store}>\n    <App />\n</Provider>, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}